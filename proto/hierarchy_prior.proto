syntax = "proto3";

import "distribution.proto";
import "matrix.proto";

package bayesmix;

/*
 * Prior for the parameters of the base measure in a Normal-Normal Inverse Gamma hierarchy
 */
message NNIGPrior {

  message NormalMeanPrior {
    UniNormalDistribution mean_prior = 1;
    double var_scaling = 2;
    double shape = 3;
    double scale = 4;
  }

  message NGGPrior {
    UniNormalDistribution mean_prior = 1;
    GammaDistribution var_scaling_prior = 2;
    double shape = 3;
    GammaDistribution scale_prior = 4;
  }

  oneof prior {
    NIGDistribution fixed_values = 1; // no prior, just fixed values
    NormalMeanPrior normal_mean_prior = 2; // prior on the mean
    NGGPrior ngg_prior = 3; // prior on the mean, var_scaling, and scale
  }
}

/*
 * Prior for the parameters of the base measure in a Laplace - Normal Inverse Gamma hierarchy
 */
message LapNIGState {
    double mean = 1;
    double var = 2;
    double shape = 3;
    double scale = 4;
    double mh_mean_var = 5;
    double mh_log_scale_var = 6;
}

message LapNIGPrior {
  oneof prior {
    LapNIGState fixed_values = 1;
  }
}

/*
 * Prior for the parameters of the base measure in a Normal-Normal Wishart hierarchy
 */
message NNWPrior {

  message NormalMeanPrior {
    MultiNormalDistribution mean_prior = 1;
    double var_scaling = 2;
    double deg_free = 3;
    Matrix scale = 4;
  }

  message NGIWPrior {
    MultiNormalDistribution mean_prior = 1;
    GammaDistribution var_scaling_prior = 2;
    double deg_free = 3;
    InvWishartDistribution scale_prior = 4;
  }

  oneof prior {
    NWDistribution fixed_values = 1; // no prior, just fixed values
    NormalMeanPrior normal_mean_prior = 2; // prior on the mean
    NGIWPrior ngiw_prior = 3; // prior on the mean, var_scaling, and scale
  }
}


/*
 * Prior for the parameters of the base measure in a Normal mixture model with a covariate-dependent
 * location.
 */
message LinRegUniPrior {
  oneof prior {
    MultiNormalIGDistribution fixed_values = 1;
  }
}


 message FAPriorDistribution {
  Vector mutilde = 1;
  Vector beta = 2;
  double phi = 3;
  double alpha0 = 4;
  uint32 q = 5;
 }


message FAPrior {
  oneof prior {
    FAPriorDistribution fixed_values = 1;
  }
}

message EmptyPrior {
  double fake_field = 1;
}
